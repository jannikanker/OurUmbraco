@using System.Configuration
@using ClientDependency.Core.Mvc
@using OurUmbraco.Our
@model GitterSharp.Model.Room
@{
    Html.RequiresJs("https://ajax.aspnetcdn.com/ajax/signalr/jquery.signalr-2.2.2.js");
    Html.RequiresJs("~/signalr/hubs");

    Html.RequiresJs("~/assets/js/lib/emojione.min.js");

    Html.RequiresJs("~/assets/js/gitter/gitter.signalr.js");
    Html.RequiresJs("~/assets/js/gitter/gitter.signalr.init.js");

    //Need Room ID passed in
    var roomId = Model.Id;

    //Topic/room name desription
    var roomName = Model.Name.Split('/').Skip(1).First().Replace("-", " ");
    var roomTopic = Model.Topic;

    //Need this passed in
    var roomUrl = "https://gitter.im/" + Model.Uri;

    var featuresService = new UpcomingFeaturesService();
    var allowed = featuresService.MemberHasAccessToFeature();

    bool unhideGitter;
    bool.TryParse(ConfigurationManager.AppSettings["UnhideGitter"], out unhideGitter);
}

@if(unhideGitter || allowed)
{
    @* This is the main init render in the DOM *@
    <section class="community">
        <div class="container">
            <div class="row">
                <div class="col-md-12 room-info">
                    <h1 class="text-center">@roomName Chat</h1>
                    <p>@roomTopic</p>
                </div>
                <div class="col-md-12">
                    <div class="gitter-room" data-room="@roomId">
                        <ul class="umb-load-indicator animated -half-second">
                            <li class="umb-load-indicator__bubble"></li>
                            <li class="umb-load-indicator__bubble"></li>
                            <li class="umb-load-indicator__bubble"></li>
                        </ul>
                    </div>
                    <p style="float: right;">
                        <a class="button green" href="@roomUrl" target="_blank" rel="noopener">Join the fun on Gitter &rarr;</a>
                    </p>
                </div>
            </div>
        </div>
    </section>


    @* Mustache JS template to render a collection of chat messages that re-uses template for single message *@
    <script type="text/template" id="gitter-chat-messages-template">
        {{ #. }}
        {{ >message }}
        {{ /. }}
        <div class="gradient-white"></div>
    </script>

    @* Mustache JS template to render a single chat message *@
    <script type="text/template" id="gitter-chat-template">
        <div class="gitter-message" data-message-id="{{ id }}">

            <div class="avatar">
                <img src="{{ fromUser.avatarUrlMedium }}" alt="{{ fromUser.displayName }}" />
            </div>

            <div class="message-container">
                <div class="user">
                    <strong class="name">{{ fromUser.displayName }}</strong>
                    <span class="username">@@{{{ memberName }}}</span>
                    <span class="date" title="{{ fullFriendlyDate }}">{{ friendlyDate }}</span>
                </div>

                <div class="gitter-message-text">
                    {{{ html }}}
                </div>
            </div>
        </div>
    </script>

    <script>
        $(function () {
            //Get existing value from SessionStorage
            var roomIds = JSON.parse(sessionStorage.getItem("gitterRoomIds") || null);
            if (!roomIds) {
                roomIds = ["@roomId"];
            } else {
                roomIds.push("@roomId");
            }

            //Now array is updated - lets push it into sessionStorage
            sessionStorage.setItem('gitterRoomIds', JSON.stringify(roomIds));

            @* Only add signalR browser consone logging - if site is in debug mode *@
            @if (HttpContext.Current.IsDebuggingEnabled)
            {
                <text>$.connection.hub.logging = true;</text>
            }
        });
    </script>
}